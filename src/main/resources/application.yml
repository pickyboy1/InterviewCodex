# 公共配置文件
# @author <a href="https://github.com/liyupi">程序员鱼皮</a>
# @from <a href="https://yupi.icu">编程导航知识星球</a>
spring:
  application:
    name: interviewcodex
  # 默认 dev 环境
  profiles:
    active: dev
  # 支持 swagger3
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  # session 配置
  session:
    # todo 取消注释开启分布式 session（须先配置 Redis）
    # store-type: redis
    # 30 天过期
    timeout: 2592000
  # 数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/mianshiya
    username: root
    password: 123456789...
    type: com.alibaba.druid.pool.DruidDataSource
    # ===================================================================
    # Druid 数据源配置
    # ===================================================================
    druid:
      # ===================================================================
      # 数据源基本属性
      # ===================================================================
      # 初始化连接池大小
      initial-size: 20
      # 最小空闲连接数
      min-idle: 20
      # 最大活跃连接数
      max-active: 200
      # 获取连接的最大等待时间（单位：毫秒）
      max-wait: 2000

      # ===================================================================
      # 连接池销毁与检测
      # ===================================================================
      # 检测需要关闭的空闲连接的间隔时间（单位：毫秒）
      time-between-eviction-runs-millis: 2000
      # 连接在池中的最小生存时间（单位：毫秒）
      min-evictable-idle-time-millis: 600000
      # 连接在池中的最大生存时间（单位：毫秒）
      max-evictable-idle-time-millis: 900000

      # ===================================================================
      # 连接有效性检测
      # ===================================================================
      # 用于测试连接是否可用的SQL语句 (MySQL示例)
      validation-query: SELECT 1
      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能。
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能。
      test-on-return: false

      # ===================================================================
      # PreparedStatement 缓存 (PSCache)
      # ===================================================================
      # 是否缓存preparedStatement
      pool-prepared-statements: true
      # 要启用PSCache，必须配置大于0。当大于0时，poolPreparedStatements自动触发修改为true。
      max-open-prepared-statements: 20

      # ===================================================================
      # KeepAlive 连接保活
      # ===================================================================
      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作
      keep-alive: true

      # ===================================================================
      # 内置过滤器配置
      # ===================================================================
      # 通过别名配置内置过滤器，多个用逗号分隔。
      filters: stat,wall,log4j2

      # Spring AOP 监控，用于监控 com.springboot.template.dao 包下的方法执行
      aop-patterns: "com.springboot.template.dao.*"

      # ===================================================================
      # Web 应用监控配置
      # ===================================================================
      # 配置 StatViewServlet（监控页面），用于展示Druid的统计信息
      stat-view-servlet:
        enabled: true
        # 访问内置监控页面的路径
        url-pattern: /druid/*
        # 不允许在页面上重置统计数据
        reset-enable: false
        # 监控页面登录用户名
        login-username: root
        # 监控页面登录密码
        login-password: 123
        # 允许访问的IP地址（白名单），为空则允许所有
        allow: 127.0.0.1
        # 拒绝访问的IP地址（黑名单），deny优先于allow
        deny:

      # 配置 WebStatFilter（Web关联监控），用于采集Web关联监控的数据
      web-stat-filter:
        enabled: true
        # 过滤所有URL
        url-pattern: /*
        # 排除静态资源和Druid监控页面的URL
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
        # 开启Session统计功能
        session-stat-enable: true
        # Session的最大统计个数
        session-stat-max-count: 1000
  cloud:
    sentinel:
      transport:
        dashboard: localhost:8131
        port: 8719
      datasource:
        ds:
          nacos:
            username: nacos
            password: nacos
            server-addr: localhost:8848
            data-id: ${spring.application.name}-rules # Nacos 中的配置 ID
            rule-type: flow
            data-type: json

  # Redis 配置
  redis:
    database: 1
    host: localhost
    port: 6379
    timeout: 5000
  # Elasticsearch 配置
  # todo 需替换配置，然后取消注释
  elasticsearch:
    uris: http://localhost:9200
    username: root
    password: 123456
  # 文件上传
  servlet:
    multipart:
      # 大小限制
      max-file-size: 10MB
server:
  address: 0.0.0.0
  port: 8101
  servlet:
    context-path: /api
    # cookie 30 天过期
    session:
      cookie:
        max-age: 2592000
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）

# 配置中心
nacos:
  config:
    server-addr: 127.0.0.1:8848
    bootstrap:
      enable: true
    data-id: interviewCodex
    group: DEFAULT_GROUP
    type: yaml
    auto-refresh: true
    context-path:
      exclude:
        - com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
# Sa-Token
sa-token:
#  token 名
  token-name: interviewCodex
#  token 有效期
  timeout: 2592000 # token 有效期，单位秒
  active-timeout: -1 # token最低活跃频率,超过此时间没访问系统就会被冻结,默认-1,不限制
  is-concurrent: false # 是否允许同一账号多地同时登录
  is-share: true # 多人同时登陆,是否共用token
  token-style: uuid
  is-log: true

# 微信相关
wx:
  # 微信公众平台
  # todo 需替换配置
  mp:
    token: xxx
    aesKey: xxx
    appId: xxx
    secret: xxx
    config-storage:
      http-client-type: HttpClient
      key-prefix: wx
      redis:
        host: 127.0.0.1
        port: 6379
      type: Memory
  # 微信开放平台
  # todo 需替换配置
  open:
    appId: xxx
    appSecret: xxx
# 对象存储
# todo 需替换配置
cos:
  client:
    accessKey: xxx
    secretKey: xxx
    region: xxx
    bucket: xxx
# 接口文档配置
knife4j:
  enable: true
  openapi:
    title: "接口文档"
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.pickyboy.interviewcodex.controller
hotkey:
  app-name: interviewCodex
  caffeine-size: 10000
  batch-push-interval: 1000
  etcd-server: http://127.0.0.1:2379
